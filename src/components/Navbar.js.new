'use client';
import { useState, useEffect } from 'react';
import Link from 'next/link';
import { Bars3Icon, XMarkIcon, ChevronDownIcon } from '@heroicons/react/24/outline';
import Image from 'next/image';
import 'aos/dist/aos.css';

const services = [
  { 
    name: 'Infrared Thermography', 
    href: '/services/infrared-thermography', 
    icon: '/infaredthermography.webp',
    description: 'Detect thermal anomalies and potential issues before they become problems.'
  },
  { 
    name: 'Power Quality Analysis', 
    href: '/services/power-quality-analysis', 
    icon: '/powerqualityanalysis.webp',
    description: 'Comprehensive analysis of electrical power systems for optimal performance.'
  },
  { 
    name: 'Vibration Analysis', 
    href: '/services/vibration-analysis', 
    icon: '/vibrationalanalysis.webp',
    description: 'Identify and diagnose mechanical issues through vibration monitoring.'
  },
  { 
    name: 'Battery & Electrical Testing', 
    href: '/services/battery-testing', 
    icon: '/Battery Impedance Inspection.webp',
    description: 'Comprehensive battery health and electrical system analysis.'
  },
  { 
    name: 'Acoustic Imaging & Leak Detection', 
    href: '/services/acoustic-imaging', 
    icon: '/Industrial Acoustic Imaging.webp',
    description: 'Advanced ultrasound technology for leak detection and system analysis.'
  },
  { 
    name: 'Oil Condition Monitoring', 
    href: '/services/oil-monitoring', 
    icon: '/Oil Condition Monitoring.webp',
    description: 'Monitor and analyze oil conditions for optimal equipment performance.'
  }
];

export default function Navbar() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isServicesOpen, setIsServicesOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 0);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${
      isScrolled 
        ? 'bg-white shadow-lg border-b border-gray-200' 
        : 'bg-white/80 backdrop-blur-md border-b border-white/20'
    }`}>
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between h-20">
          <div className="flex items-center">
            <Link href="/" className="flex items-center gap-3">
              <Image src="/logo.png" alt="Logo" width={40} height={40} className="object-contain" />
              <div className="flex flex-col">
                <div className="flex items-center gap-2">
                  <span className="text-[#0066B2] font-bold text-lg tracking-tight">TECHNICAL & ENGINEERING</span>
                  <span className="text-[#FF5733] font-bold text-lg tracking-tight">SOLUTIONS</span>
                </div>
              </div>
            </Link>
          </div>

          {/* Desktop Menu */}
          <div className="hidden md:flex md:items-center md:space-x-8">
            <Link href="/" className={`${isScrolled ? 'text-gray-800' : 'text-[#2B3990]'} hover:text-[#FF5733] px-3 py-2 text-sm font-medium transition-colors`}>
              Home
            </Link>
            <Link href="/about" className={`${isScrolled ? 'text-gray-800' : 'text-[#2B3990]'} hover:text-[#FF5733] px-3 py-2 text-sm font-medium transition-colors`}>
              About
            </Link>
            <div className="relative group">
              <Link
                href="/services"
                className={`${isScrolled ? 'text-gray-800' : 'text-[#2B3990]'} hover:text-[#FF5733] px-3 py-2 text-sm font-medium transition-colors flex items-center group`}
              >
                Services 
                <ChevronDownIcon className="ml-1 h-4 w-4 transition-transform duration-200 group-hover:rotate-180" />
              </Link>
              {/* Full-width dropdown menu */}
              <div
                className="absolute left-1/2 transform -translate-x-1/2 w-screen mt-2 opacity-0 translate-y-2 invisible group-hover:opacity-100 group-hover:translate-y-0 group-hover:visible transition-all duration-200"
                style={{ maxWidth: 'calc(100vw - 2rem)' }}
              >
                <div className="mx-auto max-w-7xl">
                  <div className="bg-white rounded-xl shadow-xl ring-1 ring-black ring-opacity-5 overflow-hidden">
                    <div className="px-8 py-6 border-b border-gray-100">
                      <div className="flex justify-between items-center">
                        <div>
                          <h3 className="text-lg font-semibold text-gray-900">Our Services</h3>
                          <p className="text-sm text-gray-500 mt-1">Comprehensive engineering diagnostics and monitoring solutions</p>
                        </div>
                        <Link 
                          href="/services" 
                          className="text-sm text-[#FF5733] hover:text-[#FF5733]/80 font-medium flex items-center"
                        >
                          View All Services
                          <svg className="w-4 h-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </Link>
                      </div>
                    </div>
                    <div className="grid grid-cols-3 gap-6 px-8 py-6">
                      {services.map((service) => (
                        <Link
                          key={service.name}
                          href={service.href}
                          className="group block"
                        >
                          <div className="relative aspect-video rounded-lg overflow-hidden mb-4">
                            <Image
                              src={service.icon}
                              alt={service.name}
                              fill
                              className="object-cover transition-transform duration-300 group-hover:scale-110"
                            />
                            <div className="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                          </div>
                          <div>
                            <h4 className="text-base font-semibold text-gray-900 group-hover:text-[#FF5733] transition-colors">
                              {service.name}
                            </h4>
                            <p className="mt-1 text-sm text-gray-500">
                              {service.description}
                            </p>
                          </div>
                        </Link>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <Link href="/team" className={`${isScrolled ? 'text-gray-800' : 'text-[#2B3990]'} hover:text-[#FF5733] px-3 py-2 text-sm font-medium transition-colors`}>
              Team
            </Link>
            <Link href="/contact" className="inline-flex items-center px-4 py-2 bg-[#FF5733] text-white rounded-lg text-sm font-medium hover:bg-[#FF5733]/90 transition-colors">
              Contact Us
            </Link>
          </div>

          {/* Mobile menu button */}
          <div className="md:hidden flex items-center">
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-[#FF5733] hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-[#FF5733]"
            >
              <span className="sr-only">Open main menu</span>
              {isMenuOpen ? (
                <XMarkIcon className="block h-6 w-6" aria-hidden="true" />
              ) : (
                <Bars3Icon className="block h-6 w-6" aria-hidden="true" />
              )}
            </button>
          </div>
        </div>
      </div>

      {/* Mobile menu */}
      <div className={`${isMenuOpen ? 'block' : 'hidden'} md:hidden`}>
        <div className="px-2 pt-2 pb-3 space-y-1 bg-white shadow-lg">
          <Link
            href="/"
            className="block px-3 py-2 rounded-md text-base font-medium text-gray-900 hover:bg-gray-50"
            onClick={() => setIsMenuOpen(false)}
          >
            Home
          </Link>
          <Link
            href="/about"
            className="block px-3 py-2 rounded-md text-base font-medium text-gray-900 hover:bg-gray-50"
            onClick={() => setIsMenuOpen(false)}
          >
            About
          </Link>
          <div>
            <button
              onClick={() => setIsServicesOpen(!isServicesOpen)}
              className="flex items-center justify-between w-full px-3 py-2 rounded-md text-base font-medium text-gray-900 hover:bg-gray-50"
            >
              Services
              <ChevronDownIcon className={`h-5 w-5 transform transition-transform duration-200 ${isServicesOpen ? 'rotate-180' : ''}`} />
            </button>
            <div className={`${isServicesOpen ? 'block' : 'hidden'} space-y-1 pl-4`}>
              {services.map((service) => (
                <Link
                  key={service.name}
                  href={service.href}
                  className="block px-3 py-2 rounded-md text-base font-medium text-gray-900 hover:bg-gray-50"
                  onClick={() => {
                    setIsServicesOpen(false);
                    setIsMenuOpen(false);
                  }}
                >
                  {service.name}
                </Link>
              ))}
            </div>
          </div>
          <Link
            href="/team"
            className="block px-3 py-2 rounded-md text-base font-medium text-gray-900 hover:bg-gray-50"
            onClick={() => setIsMenuOpen(false)}
          >
            Team
          </Link>
          <Link
            href="/contact"
            className="block px-3 py-2 rounded-md text-base font-medium text-white bg-[#FF5733] hover:bg-[#FF5733]/90"
            onClick={() => setIsMenuOpen(false)}
          >
            Contact Us
          </Link>
        </div>
      </div>
    </nav>
  );
}
